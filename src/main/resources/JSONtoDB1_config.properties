db.url=jdbc:postgresql://localhost:5432/postgres
db.user=postgres
db.password=mysecretpassword


# --- For product_metrics table ---
sql.create.table=CREATE TABLE IF NOT EXISTS product_metrics (hashkey_metadata JSONB, time_bucket_key TEXT, attribute_list JSONB);
sql.insert=INSERT INTO product_metrics (hashkey_metadata, time_bucket_key, attribute_list) VALUES (?::jsonb, ?, ?::jsonb);
sql.create.index=CREATE INDEX IF NOT EXISTS idx_time_bucket_key_hash ON product_metrics USING HASH (digest(time_bucket_key, 'sha256'));

# --- For key_market_list table ---
sql.create.table1=CREATE TABLE IF NOT EXISTS key_market_list (hashkey_metadata JSONB, time_bucket_key TEXT, attribute_list JSONB);
sql.insert1=INSERT INTO key_market_list (hashkey_metadata, time_bucket_key, attribute_list) VALUES (?::jsonb, ?, ?::jsonb);
sql.create.index1=CREATE INDEX IF NOT EXISTS idx_time_bucket_key_hash ON key_market_list USING HASH (digest(time_bucket_key, 'sha256'));

# --- For key_customer_list table ---
sql.create.table2=CREATE TABLE IF NOT EXISTS key_customer_list (hashkey_metadata JSONB, time_bucket_key TEXT, attribute_list JSONB);
sql.insert2=INSERT INTO key_customer_list (hashkey_metadata, time_bucket_key, attribute_list) VALUES (?::jsonb, ?, ?::jsonb);
sql.create.index2=CREATE INDEX IF NOT EXISTS idx_time_bucket_key_hash ON key_customer_list USING HASH (digest(time_bucket_key, 'sha256'));
